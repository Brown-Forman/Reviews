n.character = as.character(n)
url = paste0("https://www.tripadvisor.com/Restaurant_Review-g39604-d9799396-Reviews",
'-or',n.character,"-Mussel_Burger_Bar_Downtown-Louisville_Kentucky.html")
reviews = read_html(url)
headline.temp = reviews %>%
html_nodes("span.noQuotes") %>%
html_text()
headline = append(headline,headline.temp)
# body including reviews and response from owner, need to look at responded.yn.temp to distinguish between review and response
body.temp <- reviews %>%
html_nodes("p.partial_entry") %>%
html_text()
body.temp
# body including reviews and response from owner, need to look at responded.yn.temp to distinguish between review and response
body.temp <- reviews %>%
html_nodes("partial_entry") %>%
html_text()
body.temp
# body including reviews and response from owner, need to look at responded.yn.temp to distinguish between review and response
body.temp <- reviews %>%
html_nodes("p.partial_entry") %>%
html_text()
body.temp
# body including reviews and response from owner, need to look at responded.yn.temp to distinguish between review and response
body.temp <- reviews %>%
html_nodes("p.entry .partial_entry") %>%
html_text()
body.temp
# body including reviews and response from owner, need to look at responded.yn.temp to distinguish between review and response
body.temp <- reviews %>%
html_nodes(".entry .partial_entry") %>%
html_text()
body.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("mgrRspnInline") %>%
html_text()
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("mgrRspnInline") %>%
html_text()
responded.yn.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.prw_rup prw_reviews_text_summary_hsx.entry.partial_entry") %>%
html_text()
responded.yn.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.prw_rup prw_reviews_text_summary_hsx. entry. partial_entry") %>%
html_text()
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes(".prw_rup prw_reviews_text_summary_hsx .entry .partial_entry") %>%
html_text()
responded.yn.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp
# Owner responded yes or no
response.terms <- c('Thanks for', 'Thank you', )
# Owner responded yes or no
response.terms <- c('Thanks for', 'Thank you')
# body including reviews and response from owner, need to look at responded.yn.temp to distinguish between review and response
body.temp <- reviews %>%
html_nodes(".entry .partial_entry") %>%
html_text()
# Fill in response
response.temp <- grepl(response.terms,body.temp)
response.temp
# Fill in response
response.temp <- grepl(paste(response.terms, collapse="|"),body.temp)
response.temp
body.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp
responded.yn.temp <- strsplit(responded.yn.temp,"Responded")
responded.yn.temp
# Owner responded yes or no
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp
# Owner responded yes or no
year <- c(2010:2019)
year
responded.yn.temp
responded.yn.temp <- lapply(responded.yn.temp,`[[`, 1)
responded.yn.temp
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- lapply(responded.yn.temp,`[[`, 2)
# Read the web page and get the number of reviews
mussel.n.burger <- read_html("https://www.tripadvisor.com/Restaurant_Review-g39604-d9799396-Reviews-Mussel_Burger_Bar_Downtown-Louisville_Kentucky.html")
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp
responded.yn.temp <- lapply(responded.yn.temp,`[[`, 2)
responded.yn.temp
responded.yn.temp <- lapply(responded.yn.temp,`[[`, 2)
responded.yn.temp <- lapply(responded.yn.temp,`[[`, 1)
responded.yn.temp <- grepl("responded to this", responded.yn.temp)
responded.yn.temp
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp
responded.yn.temp[[2]]
responded.yn.temp[2]
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp <- sapply(mylist,function(x) x[2])
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp
responded.yn.temp <- strsplit(responded.yn.temp,paste(year,collapse="|"))
responded.yn.temp
# Owner responded yes or no
year <- c(2010:2019)
year
# Owner responded yes or no
year <- as.character(c(2010:2019))
year
responded.yn.temp <- strsplit(responded.yn.temp,paste(year,collapse="|"))
paste(year,collapse="|")
# Owner responded yes or no
year <- c(as.character(2010:2019))
year
vector <- c('2010','2011')
vector
str_replace_all(responded.yn.temp,'20..',"year")
responded.yn.temp
responded.yn.temp <- str_replace_all(responded.yn.temp,'20..',"year")
responded.yn.temp
responded.yn.temp <- strsplit(responded.yn.temp,'year')
responded.yn.temp
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp
responded.yn.temp %in% body.temp
body.temp
responded.yn.temp %in% body.temp
responded.yn.temp
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp <- grepl("responded to this", responded.yn.temp)
responded.yn.temp <- str_replace_all(responded.yn.temp,'20..',"qwertyuiop")
responded.yn.temp <- strsplit(responded.yn.temp,'qwertyuiop')
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp = responded.yn.temp[1:10]
responded.yn.temp %in% body.temp
responded.yn.temp
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp <- grepl("responded to this", responded.yn.temp)
responded.yn.temp <- str_replace_all(responded.yn.temp,'20..',"qwertyuiop")
responded.yn.temp <- strsplit(responded.yn.temp,'qwertyuiop')
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp %in% body.temp
responded.yn.temp
responded.yn.temp <- reviews %>%
html_nodes("div.mgrRspnInline") %>%
html_text()
responded.yn.temp <- strsplit(responded.yn.temp,"Responded ")
responded.yn.temp
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp
responded.yn.temp <- str_replace_all(responded.yn.temp,'20..',"qwertyuiop")
responded.yn.temp <- strsplit(responded.yn.temp,'qwertyuiop')
responded.yn.temp <- sapply(responded.yn.temp,function(x) x[2])
responded.yn.temp %in% body.temp
body.temp %in% responded.yn.temp
responded.yn.temp <- body.temp %in% responded.yn.temp
responded.yn.temp
length(body.temp)
for (i in 1:9){
a = i
if (responded.yn.temp[i] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 2
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
content
body.temp
responded.yn.temp
content <- rep(NA,10)
content[1] = body.temp[1]
for (i in 1:9){
a = i
if (responded.yn.temp[i] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
content
content <- rep(NA,10)
content[1] = body.temp[1]
content
i = 1
a = i
responded.yn.temp[i] == TRUE
content[i+1] = body.temp[a+1]
content
a = a + 1
i = 2
a = 1
for (i in 1:9){
if (responded.yn.temp[i] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
content
content <- rep(NA,10)
content[1] = body.temp[1]
content
i = 1
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i
a = 1
i = 1
responded.yn.temp[i+1] == TRUE
content[i+1]
content <- rep(NA,10)
content[1] = body.temp[1]
content[i+1]
body.temp[a+1]
body.temp
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
a
for (i in 1:9){
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
content
content <- rep(NA,10)
content[1] = body.temp[1]
i = 1
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i = 2
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
responded.yn.temp[i+1]
content[i+1]
body.temp
a
a
a = 1
i = 2
a = 1
i = 1
content
content <- rep(NA,10)
content[1] = body.temp[1]
a = 1
i = 1
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
a
i
i = 2
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
a
i = 3
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i = 5
if (responded.yn.temp[i+1] == TRUE){
a = a + 1
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i
a
content <- rep(NA,10)
content[1] = body.temp[1]
a = 1
i = 5
for (i in 1:9){
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 2
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
content
content <- rep(NA,10)
content[1] = body.temp[1]
a = 1
i = 1
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 2
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i = 2
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 2
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i = 3
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 2
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i = 4
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 2
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
i = 5
a
responded.yn.temp[i+1] == TRUE
a = 8
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 4
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
content
content <- rep(NA,10)
content[1] = body.temp[1]
a = 1
i = 1
for (i in 1:9){
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 3
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
content
func_content <- function(body,responded.yn){
content <- rep(NA,10)
content[1] = body.temp[1]
a = 1
i = 1
for (i in 1:9){
if (responded.yn.temp[i+1] == TRUE){
content[i+1] = body.temp[a+2]
a = a + 3
} else {
content[i+1] = body.temp[a+1]
a = a + 1
}
}
}
content <- func_content(body.temp,responded.yn.temp)
content
body.temp
func_content <- function(body,responded.yn){
content <- rep(NA,10)
content[1] = body[1]
a = 1
i = 1
for (i in 1:9){
if (responded.yn[i+1] == TRUE){
content[i+1] = body[a+2]
a = a + 3
} else {
content[i+1] = body[a+1]
a = a + 1
}
}
}
content <- func_content(body.temp,responded.yn.temp)
content
func_content <- function(body,responded.yn){
content <- rep(NA,10)
content[1] = body[1]
a = 1
i = 1
for (i in 1:9){
if (responded.yn[i+1] == TRUE){
content[i+1] = body[a+2]
a = a + 3
} else {
content[i+1] = body[a+1]
a = a + 1
}
}
}
body.temp
responded.yn.temp
func_content <- function(body,responded.yn){
content <- rep(NA,10)
content[1] = body[1]
a = 1
i = 1
for (i in 1:9){
if (responded.yn[i+1] == TRUE){
content[i+1] = body[a+2]
a = a + 3
} else {
content[i+1] = body[a+1]
a = a + 1
}
}
return(content)
}
content <- func_content(body.temp,responded.yn.temp)
content
library(rvest)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(tm)
library(scales)
library(topicmodels)
library(rvest)
library(purrr)
library(rvest)
library(stringr)
library(rvest)
